name: test

on:
  pull_request: {}
  push:
    branches:
      - master

jobs:
  linux:
    strategy:
      matrix:
        go:
          - '1.12'
          - '1.13'
          - '1'
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: install mecab
        run: |
          .github/install-mecab-linux.sh
          echo "::set-env name=CGO_LDFLAGS::$(mecab-config --libs)"
          echo "::set-env name=CGO_CFLAGS::-I$(mecab-config --inc-dir)"
      - name: setup Go ${{ matrix.go }}
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go }}
      - name: test
        run: |
          go version
          go test -v -race ./...

  macos:
    strategy:
      matrix:
        go:
          - '1.12'
          - '1.13'
          - '1'
      fail-fast: false
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - name: install mecab
        run: |
          .github/install-mecab-darwin.sh
          echo "::set-env name=CGO_LDFLAGS::$(mecab-config --libs)"
          echo "::set-env name=CGO_CFLAGS::-I$(mecab-config --inc-dir)"
      - name: setup Go ${{ matrix.go }}
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go }}
      - name: test
        run: |
          go version
          go test -v -race ./...

  mingw:
    strategy:
      matrix:
        go:
          - '1.12'
          - '1.13'
          - '1'
      fail-fast: false
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2

      - name: install MSYS2
        run: |
          choco install --no-progress msys2
      - name: Set ENV
        run: |
          echo '::set-env name=PATH::C:\tools\msys64\bin;C:\tools\msys64\usr\bin;C:\tools\msys64\mingw64\bin;'

      - name: setup MSYS2 and MeCab
        run: |
          bash -lc ./.github/install-mecab-mingw.sh

      - name: setup Go ${{ matrix.go }}
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go }}
      - name: test
        run: |
          go version
          go test -v -race ./...
